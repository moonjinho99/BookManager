/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2024-03-08 06:48:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.book;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bookReg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".bookReg{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth:1000px;\r\n");
      out.write("\theight:800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2{\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth:1500px;\r\n");
      out.write("\theight:800px;\r\n");
      out.write("}\r\n");
      out.write(".insertData{\r\n");
      out.write("\twidth:800px;\r\n");
      out.write("\theight:50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bookRegFooter{\r\n");
      out.write("\twidth:1000px;\r\n");
      out.write("\theight:100px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bookRegFooter>input{\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("\tfont-size:20px;\r\n");
      out.write("\tmargin-right:30px;\r\n");
      out.write("\twidth:100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#result_card img{\r\n");
      out.write("\t\tmax-width: 40%;\r\n");
      out.write("\t    height: auto;\r\n");
      out.write("\t    display: block;\r\n");
      out.write("\t    padding: 5px;\r\n");
      out.write("\t    margin-top: 10px;\r\n");
      out.write("\t    margin: auto;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t#result_card {\r\n");
      out.write("\t\tposition: relative;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write(".imgDeleteBtn{\r\n");
      out.write("\t    position: absolute;\r\n");
      out.write("\t    top: 0%;\r\n");
      out.write("\t    right: 33%;\r\n");
      out.write("\t    background-color: #ef7d7d;\r\n");
      out.write("\t    color: wheat;\r\n");
      out.write("\t    width: 30px;\r\n");
      out.write("\t    height: 30px;\r\n");
      out.write("\t    border-radius: 50%;\r\n");
      out.write("\t    text-align: center;\r\n");
      out.write("\t    border: none;\r\n");
      out.write("\t    display: block;\r\n");
      out.write("\t    cursor: pointer;\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"bookReg\">\r\n");
      out.write("\t<div class=\"bookRegHeader\">\r\n");
      out.write("\t\t<h2>책 등록 페이지</h2>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<table class=\"bookRegTable\" id=\"bookRegTable\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"book_title\" class=\"insertData\" placeholder=\"책 제목을 입력하세요\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>종류</th>\r\n");
      out.write("\t\t\t<td><select id=\"book_category\" class=\"insertData\">\r\n");
      out.write("\t\t\t\t<option value=\"소설\">소설</option>\r\n");
      out.write("\t\t\t\t<option value=\"시\">시</option>\r\n");
      out.write("\t\t\t\t<option value=\"수필\">수필</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>저자</th>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"book_author\" class=\"insertData\" placeholder=\"저자를 입력하세요\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>재고</th>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"book_quantity\" class=\"insertData\" placeholder=\"재고를 입력하세요\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>가격</th>\r\n");
      out.write("\t\t\t<td><input type=\"text\" id=\"book_price\" class=\"insertData\" placeholder=\"가격을 입력하세요\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t<td><textarea rows=\"1\" cols=\"30\" id = \"book_content\" class=\"insertData\" placeholder=\"줄거리를 입력하세요\" style=\"width:800px; height:400px;\"></textarea></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>이미지</th>\r\n");
      out.write("\t\t\t<td><div id =\"uploadResult\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div></td>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t<td><input type=\"file\" id=\"bookRegImg\" name=\"uploadFile\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<div class=\"bookRegFooter\" style=\"margin-top:30px;\">\r\n");
      out.write("\t\t<input type=\"button\" value=\"목록\" onclick=\"javascript:history.back()\" style=\"margin-left:400px;\"/>\r\n");
      out.write("\t\t<input type=\"button\" value=\"등록하기\" onclick=\"regData()\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write(" <script type=\"text/javascript\" src=\"../resources/js/book/bookReg.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
